group 'ch.jug.kotlin.introduction'
version '1.0.0-SNAPSHOT'

buildscript {
    ext.kotlinVersion = '1.1.2'
    ext.springBootVersion = '1.5.3.RELEASE'

	repositories {
		maven {
			url "https://plugins.gradle.org/m2/"
		}
		mavenCentral()
	}

	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}") // Für Kotlin integration
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}") // Klassen müssen nicht als open deklariert werden
        classpath("org.jetbrains.kotlin:kotlin-noarg:${kotlinVersion}") // Es müssen keine zero-args constructors defieniert werden
	}
}

apply plugin: "kotlin"
apply plugin: "org.springframework.boot"
apply plugin: "org.jetbrains.kotlin.plugin.spring"
apply plugin: "org.jetbrains.kotlin.plugin.jpa"
apply plugin: "org.jetbrains.kotlin.plugin.noarg"
apply plugin: "org.jetbrains.kotlin.plugin.allopen"


compileKotlin {
	kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
	kotlinOptions.jvmTarget = "1.8"
}


repositories {
	mavenCentral()
}

setSourceCompatibility(1.8)
setTargetCompatibility(1.8)


dependencies {
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile("org.jetbrains.kotlin:kotlin-stdlib-jre8:${kotlinVersion}")
	compile("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")
	runtime('com.h2database:h2')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.4.1'
    distributionUrl = "https://services.gradle.org/distributions/gradle-$gradleVersion-all.zip"
}

